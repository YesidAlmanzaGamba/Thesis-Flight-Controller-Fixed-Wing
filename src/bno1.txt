#include <Arduino.h>
#include <Wire.h>

#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <utility/imumaths.h>

// Definir la dirección I2C del BNO055
Adafruit_BNO055 bno = Adafruit_BNO055(55, 0x29); // Cambia a 0x29 si es necesario

void scanI2CDevices() {
  byte error, address;
  int nDevices;

  Serial.println("Scanning...");

  nDevices = 0;
  for (address = 1; address < 127; address++ ) {
    Wire.beginTransmission(address);
    error = Wire.endTransmission();

    if (error == 0) {
      Serial.print("I2C device found at address 0x");
      if (address < 16)
        Serial.print("0");
      Serial.print(address, HEX);
      Serial.println("  !");
      nDevices++;
    } else if (error == 4) {
      Serial.print("Unknown error at address 0x");
      if (address < 16)
        Serial.print("0");
      Serial.println(address, HEX);
    }
  }
  if (nDevices == 0)
    Serial.println("No I2C devices found\n");
  else
    Serial.println("done\n");

  delay(5000); // espera 5 segundos antes de escanear nuevamente
}

void setup() {
  // Inicia el I2C con los pines específicos
  Wire.begin(8, 9);
  Serial.begin(115200);
  while (!Serial); // Espera hasta que el puerto serial esté listo
  Serial.println("\nI2C Scanner");

  // Escanear dispositivos I2C
  scanI2CDevices();
  
  // Iniciar el BNO055
  if (!bno.begin()) {
    Serial.println("No BNO055 detected. Check your wiring or I2C ADDR!");
    while (1);
  }
  delay(1000);

  bno.setExtCrystalUse(true);
}

void loop() {
  imu::Vector<3> euler = bno.getVector(Adafruit_BNO055::VECTOR_EULER);

  Serial.print("X: ");
  Serial.print(euler.x());
  Serial.print(" Y: ");
  Serial.print(euler.y());
  Serial.print(" Z: ");
  Serial.println(euler.z());

  delay(1000);
}


